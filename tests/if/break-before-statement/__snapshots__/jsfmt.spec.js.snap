// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`if.js - {"breakBeforeStatement":"always"} format 1`] = `
====================================options=====================================
breakBeforeStatement: "always"
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
for (let i = 0; i < 2; i++) if (true) break

if (true) { console.log("test") }

for (const key in { p: 1 })
    if (object.hasOwnProperty(key))
        console.log(object[key]);

=====================================output=====================================
for (let i = 0; i < 2; i++)
  if (true)
    break;

if (true) {
  console.log("test");
}

for (const key in { p: 1 })
  if (object.hasOwnProperty(key))
    console.log(object[key]);

================================================================================
`;

exports[`if.js - {"breakBeforeStatement":"conditionals"} format 1`] = `
====================================options=====================================
breakBeforeStatement: "conditionals"
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
for (let i = 0; i < 2; i++) if (true) break

if (true) { console.log("test") }

for (const key in { p: 1 })
    if (object.hasOwnProperty(key))
        console.log(object[key]);

=====================================output=====================================
for (let i = 0; i < 2; i++)
  if (true)
    break;

if (true) {
  console.log("test");
}

for (const key in { p: 1 })
  if (object.hasOwnProperty(key))
    console.log(object[key]);

================================================================================
`;
